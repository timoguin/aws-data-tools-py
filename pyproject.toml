[tool.poetry]
name = "aws_data_tools"
version = "0.1.1"
description = "A set of Python libraries for querying and transforming data from AWS APIs"
authors = ["Tim O'Guin <timoguin@gmail.com>"]
license = "MIT"
maintainers = ["Tim O'Guin <timoguin@gmail.com>"]
readme = "README.md"
homepage = "https://timoguin.github.io/aws-data-tools-py"
repository = "https://github.com/timoguin/aws-data-tools-py"
documentation = "https://timoguin.github.io/aws-data-tools-py"
keywords = ["aws", "etl", "library"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
exclude = ["conftest.py", "fixtures", "tests"]
include = ["CHANGELOG.md"]

[tool.poetry.urls]
Changelog = "https://github.com/timoguin/aws-data-tools-py/blob/master/CHANGELOG.md"
Documentation = "https://timoguin.github.io/aws-data-tools-py"
Source = "https://github.com/timoguin/aws-data-tools-py"
Tracker = "https://github.com/timoguin/aws-data-tools-py/issues"

[tool.poetry.dependencies]
python = ">=3.9,<4"
boto3 = "^1.17.80"
dacite = "^1.6.0"
graphviz = "^0.16"
pyhumps = "^3.0.2"
PyYAML = "^5.4.1"
structlog = "^21.1.0"

# Optional extras: cli
click = {version = "^8.0.1", optional = true, extras=["cli"]}
click-completion = {version = "^0.5.2", optional = true, extras=["cli"]}

# Optional extras: devtools
ipdb = {version = "^0.13.8", optional = true}
notebook = {version = "^6.4.0", optional = true}
pre-commit = {version = "^2.13.0", optional = true}

# Optional extras: docs
blacken-docs = {version = "^1.12.0", optional = true}
mkdocs = {version = "^1.1.2", optional = true}
mkdocs-git-revision-date-localized-plugin = {version = "^0.9.2", optional = true}
mkdocs-macros-plugin = {version = "^0.5.5", optional = true}
mkdocs-material = {version = "^7.1.5", optional = true}

[tool.poetry.dev-dependencies]
black = "^21.11b1"
coverage = "^5.5"
flakehell = "^0.9.0"
isort = "^5.8.0"
mccabe = "^0.6.1"
moto = "^2.0.9"
pycodestyle = "^2.7.0"
pyflakes = "^2.3.1"
pylint = "^2.8.3"
pytest = "^6.2.4"
pytest-cov = "^2.12.1"
pytest-custom-exit-code = "^0.3.0"
tox-poetry = "^0.4.0"

[tool.poetry.extras]
cli = ["click", "click-completion"]
devtools = [
    "ipdb",
    "notebook",
    "pre-commit"
]
docs = [
    "blacken-docs",
    "mkdocs",
    "mkdocs-git-revision-date-localized-plugin",
    "mkdocs-macros-plugin",
    "mkdocs-material"
]

[tool.poetry.scripts]
awsdata = "aws_data_tools.cli:cli"

[build-system]
requires = ["poetry-core>=1.0.3"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"

[tool.pylint.messages_control]
disable = "C0330, C0326"

[tool.pylint.format]
max-line-length = "88"

[tool.flakehell]
format = "colored"
max_line_length = 88
show_source = true

# Fixes a flake8 compat bug: https://github.com/flakehell/flakehell/issues/10
extended_default_ignore = []

[tool.flakehell.plugins]
mccabe = ["+*"]
pycodestyle = ["+*"]
pyflakes = ["+*"]
pylint = ["+*"]

[tool.coverage.run]
source = ["aws_data_tools"]
omit = [
    "*test*",
    "**/__init__.py",
    "client/__init__.py",
    "models/__init__.py",
    "utils/__init__.py"
]

[tool.coverage.report]
omit = [
    "*test*",
    "__init__.py",
    "client/__init__.py",
    "models/__init__.py",
    "utils/__init__.py"
]

[tool.pytest.ini_options]
addopts = "-ra -q"
